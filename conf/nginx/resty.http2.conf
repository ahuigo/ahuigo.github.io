server {
    # listen 443 default_server ssl;
    listen [::]:443 ssl http2 ipv6only=on;  # disable it for multiple domains
    listen       443 ssl http2;
    ## 多域名就不加重复的 http2
    ##listen [::]:443 ssl; 
    ##listen       443 ssl ;

    set $domainname s;
    server_name $domainname;
    root   /Users/ahui/www/$host/;

    # force redirect to https
    # add_header Strict-Transport-Security "max-age=15768000" always;

    # force subdomain redirect to https
    # add_header Strict-Transport-Security "max-age=15768000; includeSubDomains" always;

    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;


    # certificate
    #ssl_certificate /usr/local/etc/ssl/certs/self-signed.crt;
    #ssl_certificate_key /usr/local/etc/ssl/private/self-signed.key;
    #ssl_dhparam /usr/local/etc/ssl/certs/dhparam.pem;
    ssl_certificate /Users/ahui/www/certs/$ssl_server_name/self-signed.crt;
    ssl_certificate_key /Users/ahui/www/certs/$ssl_server_name/self-signed.key;
    ssl_dhparam /Users/ahui/www/certs/s/dhparam.pem;

    # ssl options
    ssl_protocols TLSv1.1 TLSv1.2;
    # http2 ciphers 
    ssl_prefer_server_ciphers on;
    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    #ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';

    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    ####### gzip ###########
    gzip  on;
    gzip_proxied any;
    gzip_min_length  10; # The length is determined only from the “Content-Length” response header field.
    gzip_types	text/plain application/x-javascript application/json text/xml text/css;
    gzip_vary on;		# Enables or disables inserting the “Vary: Accept-Encoding” response header field

    location ~* \.(jpg|jpeg|gif|css|png|js|ico|html|xml|log|txt)$ { }
    location ~* \.\w+$ { }
    #location /account-server/ {
    #    proxy_set_header Origin http://app.hdmap.momenta.works;
    #    proxy_hide_header Access-Control-Allow-Origin;
    #    add_header Access-Control-Allow-Origin $http_origin;
    #    proxy_pass   http://account-server.hdmap.momenta.works/;
    #    #rewrite ^/account-server / break; #不影响
    #    #proxy_pass   http://127.0.0.1:8085/;
    #    #proxy_set_header ORIGIN $http_origin;
    #}

    location /{
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
        proxy_headers_hash_max_size 512; #or proxy_headers_hash_bucket_size: 64;
        proxy_headers_hash_bucket_size 128; 

        #proxy_http_version 1.0;
        proxy_set_header Host            $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_pass   http://127.0.0.1:4500;
    }
}
