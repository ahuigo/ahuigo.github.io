http {
    #...
    # refer https://docs.nginx.com/nginx/admin-guide/security-controls/securing-http-traffic-upstream/#complete-example
    upstream backend.example.com {
        server backend1.example.com:443;
        server backend2.example.com:443;
   }

    server {
        listen      80;
        server_name www.example.com;
        #...

        location /upstream {
            proxy_pass                    https://backend.example.com;
            
            # client certificate and the key that will be used to authenticate NGINX on each upstream server 
            proxy_ssl_certificate         /etc/nginx/client.pem;
            proxy_ssl_certificate_key     /etc/nginx/client.key;
            proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
            proxy_ssl_ciphers             HIGH:!aNULL:!MD5;

            # if you use a self-signed certificate for an upstream or your own CA, trust it( PEM format)
            proxy_ssl_trusted_certificate /etc/nginx/trusted_ca_cert.crt;

            #  check the validity of the security certificates:
            proxy_ssl_verify        on;
            proxy_ssl_verify_depth  2;

            # Determines whether SSL sessions can be reused when working with the proxied server
            proxy_ssl_session_reuse on;
        }
    }

    server {
        listen      443 ssl;
        server_name backend1.example.com;

        ssl_certificate        /etc/ssl/certs/server.crt;
        ssl_certificate_key    /etc/ssl/certs/server.key;
        ssl_client_certificate /etc/ssl/certs/ca.crt;
        ssl_verify_client      optional;

        location /yourapp {
            proxy_pass http://url_to_app.com;
        #...
        }
    }

}
